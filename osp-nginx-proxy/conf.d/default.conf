server {
    listen 80;
    server_name localhost;

    # Variables CSP
    set $default_csp "default-src 'self' https:; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https: http:; base-uri 'self'; object-src 'none'; frame-ancestors 'self';";

    # Headers de seguridad globales
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header X-Permitted-Cross-Domain-Policies "none" always;

    # Health check (primera prioridad)
    location = /health {
        if ($request_method !~ ^(GET|HEAD)$) {
            return 405 '{"error":"Method Not Allowed"}';
        }
        access_log off;
        add_header Content-Type "application/json" always;
        return 200 '{"status":"healthy","timestamp":"$time_iso8601"}';
    }

    # Rutas de autenticación específicas
    location = /api/auth/google {
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, HEAD, OPTIONS" always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
            add_header Access-Control-Max-Age 1728000 always;
            add_header Content-Type "text/plain; charset=utf-8" always;
            add_header Content-Length 0 always;
            return 204;
        }
        
        if ($request_method !~ ^(GET|HEAD|POST)$) {
            add_header Content-Type "application/json" always;
            return 405 '{"error":"Method Not Allowed"}';
        }
        
        # Comentar rate limiting hasta que se configure en nginx.conf
        # limit_req zone=auth burst=10 nodelay;
        # limit_req_status 429;
        
        rewrite ^/api/(.*)$ /$1 break;
        proxy_pass http://api_gateway;
        
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Authorization $http_authorization;
        proxy_pass_request_headers on;
        proxy_redirect off;
        
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        add_header Content-Security-Policy $default_csp always;
    }

    location = /api/auth/github {
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, HEAD, OPTIONS" always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
            add_header Access-Control-Max-Age 1728000 always;
            add_header Content-Type "text/plain; charset=utf-8" always;
            add_header Content-Length 0 always;
            return 204;
        }
        
        if ($request_method !~ ^(GET|HEAD|POST)$) {
            add_header Content-Type "application/json" always;
            return 405 '{"error":"Method Not Allowed"}';
        }
        
        # limit_req zone=auth burst=10 nodelay;
        # limit_req_status 429;
        
        rewrite ^/api/(.*)$ /$1 break;
        proxy_pass http://api_gateway;
        
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Authorization $http_authorization;
        proxy_pass_request_headers on;
        proxy_redirect off;
        
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        add_header Content-Security-Policy $default_csp always;
    }

    location = /api/protected {
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS" always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
            add_header Access-Control-Max-Age 1728000 always;
            add_header Content-Type "text/plain; charset=utf-8" always;
            add_header Content-Length 0 always;
            return 204;
        }
        
        if ($request_method !~ ^(GET|HEAD)$) {
            add_header Content-Type "application/json" always;
            return 405 '{"error":"Method Not Allowed"}';
        }
        
        # limit_req zone=auth burst=5 nodelay;
        
        rewrite ^/api/(.*)$ /$1 break;
        proxy_pass http://api_gateway;
        
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Authorization $http_authorization;
        proxy_pass_request_headers on;
        
        proxy_connect_timeout 10s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
        
        add_header Content-Security-Policy $default_csp always;
    }

    # Video streaming
    location = /api/video {
        # CORS preflight
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS" always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range" always;
            add_header Access-Control-Max-Age 1728000 always;
            add_header Content-Type "text/plain; charset=utf-8" always;
            add_header Content-Length 0 always;
            return 204;
        }

        # Sólo GET/HEAD
        if ($request_method !~ ^(GET|HEAD)$) {
            add_header Content-Type "application/json" always;
            return 405 '{"error":"Method Not Allowed"}';
        }

        # Para permitir saltos y caching parciales
        add_header Accept-Ranges bytes always;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma          "no-cache" always;
        add_header Expires         "0" always;

        rewrite ^/api/(.*)$ /$1 break;
        proxy_pass http://osp-api-gateway:8887;

        # Conexiones HTTP/1.1 persistentes
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host            $host;
        proxy_set_header X-Real-IP       $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Buffers y caching de segmentos
        proxy_buffering             on;
        proxy_buffer_size           128k;
        proxy_buffers               4 256k;
        proxy_busy_buffers_size     256k;
        proxy_max_temp_file_size    0;

        proxy_cache          video_cache;
        proxy_cache_key      $scheme$proxy_host$request_uri;
        proxy_cache_valid    200 206  10m;

        # Timeouts ajustados para streaming
        proxy_connect_timeout  10s;
        proxy_send_timeout     60s;
        proxy_read_timeout     60s;
    }

    # API Gateway general
    location /api/ {
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, HEAD, OPTIONS" always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
            add_header Access-Control-Max-Age 1728000 always;
            add_header Content-Type "text/plain; charset=utf-8" always;
            add_header Content-Length 0 always;
            return 204;
        }
        
        if ($request_method !~ ^(GET|HEAD|POST|PUT|DELETE)$) {
            add_header Content-Type "application/json" always;
            return 405 '{"error":"Method Not Allowed"}';
        }
        
        # limit_req zone=api burst=20 nodelay;
        
        rewrite ^/api/(.*)$ /$1 break;
        proxy_pass http://api_gateway;
        
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Authorization $http_authorization;
        proxy_pass_request_headers on;
        
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        add_header Content-Security-Policy $default_csp always;
    }

    # Frontend
    location / {
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, HEAD, OPTIONS" always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range" always;
            add_header Access-Control-Max-Age 1728000 always;
            add_header Content-Type "text/plain; charset=utf-8" always;
            add_header Content-Length 0 always;
            return 204;
        }
        
        if ($request_method !~ ^(GET|HEAD|POST)$) {
            add_header Content-Type "application/json" always;
            return 405 '{"error":"Method Not Allowed"}';
        }
        
        # limit_req zone=general burst=30 nodelay;
        
        proxy_pass http://osp-frontend-web:5173;
        proxy_http_version 1.1;
        
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_cache_bypass $http_upgrade;
        proxy_redirect off;
        
        proxy_connect_timeout 5s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
        
        add_header Content-Security-Policy $default_csp always;
    }
}
